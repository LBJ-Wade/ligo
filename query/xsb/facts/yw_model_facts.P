
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'GRAVITATIONAL_WAVE_DETECTION', 'GRAVITATIONAL_WAVE_DETECTION', 1, 153).
program(2, 'LOAD_DATA', 'GRAVITATIONAL_WAVE_DETECTION.LOAD_DATA', 20, 30).
program(3, 'AMPLITUDE_SPECTRAL_DENSITY', 'GRAVITATIONAL_WAVE_DETECTION.AMPLITUDE_SPECTRAL_DENSITY', 31, 42).
program(4, 'WHITENING', 'GRAVITATIONAL_WAVE_DETECTION.WHITENING', 43, 53).
program(5, 'BANDPASSING', 'GRAVITATIONAL_WAVE_DETECTION.BANDPASSING', 54, 64).
program(6, 'STRAIN_WAVEFORM', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM', 65, 71).
program(7, 'SPECTROGRAMS', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS', 72, 81).
program(8, 'SPECTROGRAMS', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS', 82, 89).
program(9, 'FILTER_COEFS', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_COEFS', 90, 95).
program(10, 'FILTER_DATA', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_DATA', 96, 108).
program(11, 'STRAIN_WAVEFORM', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM', 109, 119).
program(12, 'WAVE_FILE_GENERATOR', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR', 120, 130).
program(13, 'SHIFT_FREQUENCY_BANDPASSED', 'GRAVITATIONAL_WAVE_DETECTION.SHIFT_FREQUENCY_BANDPASSED', 131, 141).
program(14, 'WAVE_FILE_GENERATOR', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR', 142, 152).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).
has_subprogram(1, 6).
has_subprogram(1, 7).
has_subprogram(1, 8).
has_subprogram(1, 9).
has_subprogram(1, 10).
has_subprogram(1, 11).
has_subprogram(1, 12).
has_subprogram(1, 13).
has_subprogram(1, 14).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'IN', 'fn_H1', 'GRAVITATIONAL_WAVE_DETECTION<-fn_H1', 3, 1).
port(2, 'IN', 'fn_L1', 'GRAVITATIONAL_WAVE_DETECTION<-fn_L1', 5, 2).
port(3, 'PARAM', 'fs', 'GRAVITATIONAL_WAVE_DETECTION<-fs', 7, 3).
port(4, 'OUT', 'GW150914_H1_shifted.wav', 'GRAVITATIONAL_WAVE_DETECTION->GW150914_H1_shifted.wav', 8, 4).
port(5, 'OUT', 'GW150914_L1_shifted.wav', 'GRAVITATIONAL_WAVE_DETECTION->GW150914_L1_shifted.wav', 11, 5).
port(6, 'OUT', 'GW150914_H1_whitenbp.wav', 'GRAVITATIONAL_WAVE_DETECTION->GW150914_H1_whitenbp.wav', 14, 6).
port(7, 'OUT', 'GW150914_L1_whitenbp.wav', 'GRAVITATIONAL_WAVE_DETECTION->GW150914_L1_whitenbp.wav', 17, 7).
port(8, 'IN', 'fn_H1', 'GRAVITATIONAL_WAVE_DETECTION.LOAD_DATA<-fn_H1', 22, 8).
port(9, 'IN', 'fn_L1', 'GRAVITATIONAL_WAVE_DETECTION.LOAD_DATA<-fn_L1', 24, 9).
port(10, 'OUT', 'strain_H1', 'GRAVITATIONAL_WAVE_DETECTION.LOAD_DATA->strain_H1', 26, 10).
port(11, 'OUT', 'strain_L1', 'GRAVITATIONAL_WAVE_DETECTION.LOAD_DATA->strain_L1', 28, 11).
port(12, 'IN', 'strain_H1', 'GRAVITATIONAL_WAVE_DETECTION.AMPLITUDE_SPECTRAL_DENSITY<-strain_H1', 33, 10).
port(13, 'IN', 'strain_L1', 'GRAVITATIONAL_WAVE_DETECTION.AMPLITUDE_SPECTRAL_DENSITY<-strain_L1', 35, 11).
port(14, 'PARAM', 'fs', 'GRAVITATIONAL_WAVE_DETECTION.AMPLITUDE_SPECTRAL_DENSITY<-fs', 37, 12).
port(15, 'OUT', 'psd_H1', 'GRAVITATIONAL_WAVE_DETECTION.AMPLITUDE_SPECTRAL_DENSITY->psd_H1', 38, 13).
port(16, 'OUT', 'psd_L1', 'GRAVITATIONAL_WAVE_DETECTION.AMPLITUDE_SPECTRAL_DENSITY->psd_L1', 40, 14).
port(17, 'IN', 'psd_H1', 'GRAVITATIONAL_WAVE_DETECTION.WHITENING<-psd_H1', 45, 13).
port(18, 'IN', 'psd_L1', 'GRAVITATIONAL_WAVE_DETECTION.WHITENING<-psd_L1', 47, 14).
port(19, 'OUT', 'strain_H1_whiten', 'GRAVITATIONAL_WAVE_DETECTION.WHITENING->strain_H1_whiten', 49, 15).
port(20, 'OUT', 'strain_L1_whiten', 'GRAVITATIONAL_WAVE_DETECTION.WHITENING->strain_L1_whiten', 51, 16).
port(21, 'IN', 'strain_H1_whiten', 'GRAVITATIONAL_WAVE_DETECTION.BANDPASSING<-strain_H1_whiten', 56, 15).
port(22, 'IN', 'strain_L1_whiten', 'GRAVITATIONAL_WAVE_DETECTION.BANDPASSING<-strain_L1_whiten', 58, 16).
port(23, 'OUT', 'strain_H1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.BANDPASSING->strain_H1_whitenbp', 60, 17).
port(24, 'OUT', 'strain_L1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.BANDPASSING->strain_L1_whitenbp', 62, 18).
port(25, 'IN', 'strain_H1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM<-strain_H1_whitenbp', 67, 17).
port(26, 'IN', 'strain_L1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM<-strain_L1_whitenbp', 69, 18).
port(27, 'IN', 'fn_H1', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS<-fn_H1', 74, 10).
port(28, 'IN', 'fn_L1', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS<-fn_L1', 76, 11).
port(29, 'PARAM', 'fs', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS<-fs', 78, 12).
port(30, 'OUT', 'strain_H1_specgram', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS->strain_H1_specgram', 79, 19).
port(31, 'OUT', 'strain_L1_specgram', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS->strain_L1_specgram', 80, 20).
port(32, 'IN', 'strain_H1_whiten', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS<-strain_H1_whiten', 84, 15).
port(33, 'IN', 'strain_L1_whiten', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS<-strain_L1_whiten', 86, 16).
port(34, 'PARAM', 'fs', 'GRAVITATIONAL_WAVE_DETECTION.SPECTROGRAMS<-fs', 88, 12).
port(35, 'PARAM', 'fs', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_COEFS<-fs', 92, 12).
port(36, 'OUT', 'coefs', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_COEFS->coefs', 93, 21).
port(37, 'IN', 'fn_H1', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_DATA<-fn_H1', 98, 10).
port(38, 'IN', 'fn_L1', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_DATA<-fn_L1', 100, 11).
port(39, 'IN', 'coefs', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_DATA<-coefs', 102, 21).
port(40, 'OUT', 'strain_H1_filt', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_DATA->strain_H1_filt', 104, 22).
port(41, 'OUT', 'strain_L1_filt', 'GRAVITATIONAL_WAVE_DETECTION.FILTER_DATA->strain_L1_filt', 106, 23).
port(42, 'IN', 'strain_H1_filt', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM<-strain_H1_filt', 111, 22).
port(43, 'IN', 'strain_L1_filt', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM<-strain_L1_filt', 113, 23).
port(44, 'OUT', 'strain_H1_filt_waveform', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM->strain_H1_filt_waveform', 115, 24).
port(45, 'OUT', 'strain_L1_filt_waveform', 'GRAVITATIONAL_WAVE_DETECTION.STRAIN_WAVEFORM->strain_L1_filt_waveform', 117, 25).
port(46, 'IN', 'strain_H1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR<-strain_H1_whitenbp', 122, 17).
port(47, 'IN', 'strain_L1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR<-strain_L1_whitenbp', 124, 18).
port(48, 'OUT', 'GW150914_H1_whitenbp.wav', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR->GW150914_H1_whitenbp.wav', 126, 26).
port(49, 'OUT', 'GW150914_L1_whitenbp.wav', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR->GW150914_L1_whitenbp.wav', 128, 27).
port(50, 'IN', 'strain_H1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.SHIFT_FREQUENCY_BANDPASSED<-strain_H1_whitenbp', 133, 17).
port(51, 'IN', 'strain_L1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION.SHIFT_FREQUENCY_BANDPASSED<-strain_L1_whitenbp', 135, 18).
port(52, 'OUT', 'strain_H1_shifted', 'GRAVITATIONAL_WAVE_DETECTION.SHIFT_FREQUENCY_BANDPASSED->strain_H1_shifted', 137, 28).
port(53, 'OUT', 'strain_L1_shifted', 'GRAVITATIONAL_WAVE_DETECTION.SHIFT_FREQUENCY_BANDPASSED->strain_L1_shifted', 139, 29).
port(54, 'IN', 'strain_H1_shifted', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR<-strain_H1_shifted', 144, 28).
port(55, 'IN', 'strain_L1_shifted', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR<-strain_L1_shifted', 146, 29).
port(56, 'OUT', 'GW150914_H1_shifted.wav', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR->GW150914_H1_shifted.wav', 148, 30).
port(57, 'OUT', 'GW150914_L1_shifted.wav', 'GRAVITATIONAL_WAVE_DETECTION.WAVE_FILE_GENERATOR->GW150914_L1_shifted.wav', 150, 31).

% FACT: port_alias(port_id, alias).
port_alias(1, 'FN_H1').
port_alias(2, 'FN_L1').
port_alias(4, 'GW150914_H1_shifted.wav').
port_alias(5, 'GW150914_L1_shifted.wav').
port_alias(6, 'GW150914_H1_whitenbp.wav').
port_alias(7, 'GW150914_L1_whitenbp.wav').
port_alias(8, 'FN_H1').
port_alias(9, 'FN_L1').
port_alias(10, 'strain_H1').
port_alias(11, 'strain_L1').
port_alias(12, 'strain_H1').
port_alias(13, 'strain_L1').
port_alias(15, 'PSD_H1').
port_alias(16, 'PSD_L1').
port_alias(17, 'PSD_H1').
port_alias(18, 'PSD_L1').
port_alias(19, 'strain_H1_whiten').
port_alias(20, 'strain_L1_whiten').
port_alias(21, 'strain_H1_whiten').
port_alias(22, 'strain_L1_whiten').
port_alias(23, 'strain_H1_whitenbp').
port_alias(24, 'strain_L1_whitenbp').
port_alias(25, 'strain_H1_whitenbp').
port_alias(26, 'strain_L1_whitenbp').
port_alias(27, 'strain_H1').
port_alias(28, 'strain_L1').
port_alias(32, 'strain_H1_whiten').
port_alias(33, 'strain_L1_whiten').
port_alias(36, 'COEFFICIENTS').
port_alias(37, 'strain_H1').
port_alias(38, 'strain_L1').
port_alias(39, 'COEFFICIENTS').
port_alias(40, 'strain_H1_filt').
port_alias(41, 'strain_L1_filt').
port_alias(42, 'strain_H1_filt').
port_alias(43, 'strain_L1_filt').
port_alias(44, 'strain_H1_waveform').
port_alias(45, 'strain_L1_waveform').
port_alias(46, 'strain_H1_whitenbp').
port_alias(47, 'strain_L1_whitenbp').
port_alias(48, 'GW150914_H1_whitenbp.wav').
port_alias(49, 'GW150914_L1_whitenbp.wav').
port_alias(50, 'strain_H1_whitenbp').
port_alias(51, 'strain_L1_whitenbp').
port_alias(52, 'strain_H1_shifted').
port_alias(53, 'strain_L1_shifted').
port_alias(54, 'strain_H1_shifted').
port_alias(55, 'strain_L1_shifted').
port_alias(56, 'GW150914_H1_shifted.wav').
port_alias(57, 'GW150914_L1_shifted.wav').

% FACT: port_uri_template(port_id, uri).

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(2, 8).
has_in_port(2, 9).
has_in_port(3, 12).
has_in_port(3, 13).
has_in_port(3, 14).
has_in_port(4, 17).
has_in_port(4, 18).
has_in_port(5, 21).
has_in_port(5, 22).
has_in_port(6, 25).
has_in_port(6, 26).
has_in_port(7, 27).
has_in_port(7, 28).
has_in_port(7, 29).
has_in_port(8, 32).
has_in_port(8, 33).
has_in_port(8, 34).
has_in_port(9, 35).
has_in_port(10, 37).
has_in_port(10, 38).
has_in_port(10, 39).
has_in_port(11, 42).
has_in_port(11, 43).
has_in_port(12, 46).
has_in_port(12, 47).
has_in_port(13, 50).
has_in_port(13, 51).
has_in_port(14, 54).
has_in_port(14, 55).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 4).
has_out_port(1, 5).
has_out_port(1, 6).
has_out_port(1, 7).
has_out_port(2, 10).
has_out_port(2, 11).
has_out_port(3, 15).
has_out_port(3, 16).
has_out_port(4, 19).
has_out_port(4, 20).
has_out_port(5, 23).
has_out_port(5, 24).
has_out_port(7, 30).
has_out_port(7, 31).
has_out_port(9, 36).
has_out_port(10, 40).
has_out_port(10, 41).
has_out_port(11, 44).
has_out_port(11, 45).
has_out_port(12, 48).
has_out_port(12, 49).
has_out_port(13, 52).
has_out_port(13, 53).
has_out_port(14, 56).
has_out_port(14, 57).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'FN_H1', '[FN_H1]').
data(2, 'FN_L1', '[FN_L1]').
data(3, 'fs', '[fs]').
data(4, 'GW150914_H1_shifted.wav', '[GW150914_H1_shifted.wav]').
data(5, 'GW150914_L1_shifted.wav', '[GW150914_L1_shifted.wav]').
data(6, 'GW150914_H1_whitenbp.wav', '[GW150914_H1_whitenbp.wav]').
data(7, 'GW150914_L1_whitenbp.wav', '[GW150914_L1_whitenbp.wav]').
data(8, 'FN_H1', 'GRAVITATIONAL_WAVE_DETECTION[FN_H1]').
data(9, 'FN_L1', 'GRAVITATIONAL_WAVE_DETECTION[FN_L1]').
data(10, 'strain_H1', 'GRAVITATIONAL_WAVE_DETECTION[strain_H1]').
data(11, 'strain_L1', 'GRAVITATIONAL_WAVE_DETECTION[strain_L1]').
data(12, 'fs', 'GRAVITATIONAL_WAVE_DETECTION[fs]').
data(13, 'PSD_H1', 'GRAVITATIONAL_WAVE_DETECTION[PSD_H1]').
data(14, 'PSD_L1', 'GRAVITATIONAL_WAVE_DETECTION[PSD_L1]').
data(15, 'strain_H1_whiten', 'GRAVITATIONAL_WAVE_DETECTION[strain_H1_whiten]').
data(16, 'strain_L1_whiten', 'GRAVITATIONAL_WAVE_DETECTION[strain_L1_whiten]').
data(17, 'strain_H1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION[strain_H1_whitenbp]').
data(18, 'strain_L1_whitenbp', 'GRAVITATIONAL_WAVE_DETECTION[strain_L1_whitenbp]').
data(19, 'strain_H1_specgram', 'GRAVITATIONAL_WAVE_DETECTION[strain_H1_specgram]').
data(20, 'strain_L1_specgram', 'GRAVITATIONAL_WAVE_DETECTION[strain_L1_specgram]').
data(21, 'COEFFICIENTS', 'GRAVITATIONAL_WAVE_DETECTION[COEFFICIENTS]').
data(22, 'strain_H1_filt', 'GRAVITATIONAL_WAVE_DETECTION[strain_H1_filt]').
data(23, 'strain_L1_filt', 'GRAVITATIONAL_WAVE_DETECTION[strain_L1_filt]').
data(24, 'strain_H1_waveform', 'GRAVITATIONAL_WAVE_DETECTION[strain_H1_waveform]').
data(25, 'strain_L1_waveform', 'GRAVITATIONAL_WAVE_DETECTION[strain_L1_waveform]').
data(26, 'GW150914_H1_whitenbp.wav', 'GRAVITATIONAL_WAVE_DETECTION[GW150914_H1_whitenbp.wav]').
data(27, 'GW150914_L1_whitenbp.wav', 'GRAVITATIONAL_WAVE_DETECTION[GW150914_L1_whitenbp.wav]').
data(28, 'strain_H1_shifted', 'GRAVITATIONAL_WAVE_DETECTION[strain_H1_shifted]').
data(29, 'strain_L1_shifted', 'GRAVITATIONAL_WAVE_DETECTION[strain_L1_shifted]').
data(30, 'GW150914_H1_shifted.wav', 'GRAVITATIONAL_WAVE_DETECTION[GW150914_H1_shifted.wav]').
data(31, 'GW150914_L1_shifted.wav', 'GRAVITATIONAL_WAVE_DETECTION[GW150914_L1_shifted.wav]').

% FACT: channel(channel_id, data_id).
channel(1, 4).
channel(2, 5).
channel(3, 6).
channel(4, 7).
channel(5, 8).
channel(6, 9).
channel(7, 10).
channel(8, 10).
channel(9, 10).
channel(10, 11).
channel(11, 11).
channel(12, 11).
channel(13, 12).
channel(14, 12).
channel(15, 12).
channel(16, 12).
channel(17, 13).
channel(18, 14).
channel(19, 15).
channel(20, 15).
channel(21, 16).
channel(22, 16).
channel(23, 17).
channel(24, 17).
channel(25, 17).
channel(26, 18).
channel(27, 18).
channel(28, 18).
channel(29, 21).
channel(30, 22).
channel(31, 23).
channel(32, 28).
channel(33, 29).
channel(34, 1).
channel(35, 2).
channel(36, 3).
channel(37, 3).
channel(38, 3).
channel(39, 3).
channel(40, 30).
channel(41, 31).
channel(42, 26).
channel(43, 27).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(56, 1).
port_connects_to_channel(57, 2).
port_connects_to_channel(48, 3).
port_connects_to_channel(49, 4).
port_connects_to_channel(8, 5).
port_connects_to_channel(9, 6).
port_connects_to_channel(10, 7).
port_connects_to_channel(12, 7).
port_connects_to_channel(10, 8).
port_connects_to_channel(27, 8).
port_connects_to_channel(10, 9).
port_connects_to_channel(37, 9).
port_connects_to_channel(11, 10).
port_connects_to_channel(13, 10).
port_connects_to_channel(11, 11).
port_connects_to_channel(28, 11).
port_connects_to_channel(11, 12).
port_connects_to_channel(38, 12).
port_connects_to_channel(14, 13).
port_connects_to_channel(29, 14).
port_connects_to_channel(34, 15).
port_connects_to_channel(35, 16).
port_connects_to_channel(15, 17).
port_connects_to_channel(17, 17).
port_connects_to_channel(16, 18).
port_connects_to_channel(18, 18).
port_connects_to_channel(19, 19).
port_connects_to_channel(21, 19).
port_connects_to_channel(19, 20).
port_connects_to_channel(32, 20).
port_connects_to_channel(20, 21).
port_connects_to_channel(22, 21).
port_connects_to_channel(20, 22).
port_connects_to_channel(33, 22).
port_connects_to_channel(23, 23).
port_connects_to_channel(25, 23).
port_connects_to_channel(23, 24).
port_connects_to_channel(46, 24).
port_connects_to_channel(23, 25).
port_connects_to_channel(50, 25).
port_connects_to_channel(24, 26).
port_connects_to_channel(26, 26).
port_connects_to_channel(24, 27).
port_connects_to_channel(47, 27).
port_connects_to_channel(24, 28).
port_connects_to_channel(51, 28).
port_connects_to_channel(36, 29).
port_connects_to_channel(39, 29).
port_connects_to_channel(40, 30).
port_connects_to_channel(42, 30).
port_connects_to_channel(41, 31).
port_connects_to_channel(43, 31).
port_connects_to_channel(52, 32).
port_connects_to_channel(54, 32).
port_connects_to_channel(53, 33).
port_connects_to_channel(55, 33).
port_connects_to_channel(8, 34).
port_connects_to_channel(9, 35).
port_connects_to_channel(14, 36).
port_connects_to_channel(29, 37).
port_connects_to_channel(34, 38).
port_connects_to_channel(35, 39).
port_connects_to_channel(56, 40).
port_connects_to_channel(57, 41).
port_connects_to_channel(48, 42).
port_connects_to_channel(49, 43).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 5).
inflow_connects_to_channel(2, 6).
inflow_connects_to_channel(3, 13).
inflow_connects_to_channel(3, 14).
inflow_connects_to_channel(3, 15).
inflow_connects_to_channel(3, 16).
inflow_connects_to_channel(1, 34).
inflow_connects_to_channel(2, 35).
inflow_connects_to_channel(3, 36).
inflow_connects_to_channel(3, 37).
inflow_connects_to_channel(3, 38).
inflow_connects_to_channel(3, 39).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(4, 1).
outflow_connects_to_channel(5, 2).
outflow_connects_to_channel(6, 3).
outflow_connects_to_channel(7, 4).
outflow_connects_to_channel(4, 40).
outflow_connects_to_channel(5, 41).
outflow_connects_to_channel(6, 42).
outflow_connects_to_channel(7, 43).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).
